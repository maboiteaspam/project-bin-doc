{
    "project": {},
    "files": {
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess-context.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess-context.js",
            "modules": {},
            "classes": {
                "ClucContext": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess.js",
            "modules": {},
            "classes": {
                "ClucChildProcess": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "modules": {},
            "classes": {
                "ClucRule": 1,
                "": 1,
                "ClucSuccess": 1,
                "ClucMustNot": 1,
                "ClucConfirm": 1,
                "ClucWarn": 1,
                "ClucWatch": 1,
                "ClucSpin": 1,
                "ClucSpinUntil": 1,
                "ClucProgress": 1,
                "ClucAnswer": 1,
                "ClucDisplay": 1,
                "ClucDieOnError": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh-context.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh-context.js",
            "modules": {},
            "classes": {
                "ClucSSHContext": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh.js",
            "modules": {},
            "classes": {
                "ClucSsh": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "modules": {},
            "classes": {
                "Cluc": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/index.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/example.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/example.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/oauth.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/oauth.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/generate.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/generate.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/helper/makeString.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/helper/makeString.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/prune.js": {
            "name": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/prune.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "ClucContext": {
            "name": "ClucContext",
            "shortname": "ClucContext",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess-context.js",
            "line": 12,
            "description": "Context of a command\nHelps to analyze and respond\nto the input stream from spawned process"
        },
        "ClucChildProcess": {
            "name": "ClucChildProcess",
            "shortname": "ClucChildProcess",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-childprocess.js",
            "line": 12,
            "description": "Executes commands on the local system"
        },
        "ClucRule": {
            "name": "ClucRule",
            "shortname": "ClucRule",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 20,
            "description": "Test output against a pattern\nthen save its states until the command has finished"
        },
        "": {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 110,
            "description": "Displays success message\nif pattern matches\nOtherwise displays failure message"
        },
        "ClucSuccess": {
            "name": "ClucSuccess",
            "shortname": "ClucSuccess",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 133,
            "description": "Displays success message\nif pattern matches"
        },
        "ClucMustNot": {
            "name": "ClucMustNot",
            "shortname": "ClucMustNot",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 153,
            "description": "Displays failure message\nif pattern matches\nOtherwise displays success message"
        },
        "ClucConfirm": {
            "name": "ClucConfirm",
            "shortname": "ClucConfirm",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 176,
            "description": "Displays confirm message\nif pattern matches"
        },
        "ClucWarn": {
            "name": "ClucWarn",
            "shortname": "ClucWarn",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 195,
            "description": "Displays warning message\nif pattern matches"
        },
        "ClucWatch": {
            "name": "ClucWatch",
            "shortname": "ClucWatch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 210,
            "description": "Displays the output\nWhen pattern matches"
        },
        "ClucSpin": {
            "name": "ClucSpin",
            "shortname": "ClucSpin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 226,
            "description": "Displays a spinner\nwhile pattern matches"
        },
        "ClucSpinUntil": {
            "name": "ClucSpinUntil",
            "shortname": "ClucSpinUntil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 257,
            "description": "Displays a spinner\nuntil pattern matches"
        },
        "ClucProgress": {
            "name": "ClucProgress",
            "shortname": "ClucProgress",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 284,
            "description": "Displays a progress\nwhile pattern matches"
        },
        "ClucAnswer": {
            "name": "ClucAnswer",
            "shortname": "ClucAnswer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 317,
            "description": "Writes the stdin with provided answer\nWhen given pattern matches"
        },
        "ClucDisplay": {
            "name": "ClucDisplay",
            "shortname": "ClucDisplay",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 335,
            "description": "Displays the output\nWhen patterns has not previsouly matches"
        },
        "ClucDieOnError": {
            "name": "ClucDieOnError",
            "shortname": "ClucDieOnError",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-rules.js",
            "line": 358,
            "description": "Throws an error\nWhen patterns match in stderr"
        },
        "ClucSSHContext": {
            "name": "ClucSSHContext",
            "shortname": "ClucSSHContext",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh-context.js",
            "line": 6
        },
        "ClucSsh": {
            "name": "ClucSsh",
            "shortname": "ClucSsh",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc-ssh.js",
            "line": 9,
            "description": "Execute the commands on a remote machine over ssh"
        },
        "Cluc": {
            "name": "Cluc",
            "shortname": "Cluc",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 21,
            "description": "Provide command line\nqueuing, execution and response"
        }
    },
    "classitems": [
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 43,
            "params": [
                {
                    "name": "cmd",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 54,
            "params": [
                {
                    "name": "cmd",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 65,
            "params": [
                {
                    "name": "cmd",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 76,
            "type": "{Function}",
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 85,
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 97,
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 109,
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 121,
            "params": [
                {
                    "name": "path",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 133,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "localPath",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 146,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "content",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 159,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "content",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 172,
            "params": [
                {
                    "name": "localFile",
                    "description": ""
                },
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 185,
            "params": [
                {
                    "name": "localFile",
                    "description": ""
                },
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 198,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "content",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 211,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "content",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 224,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 236,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 248,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 260,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 272,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 284,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 296,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 308,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 320,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 332,
            "params": [
                {
                    "name": "remoteFile",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 344,
            "params": [
                {
                    "name": "localPath",
                    "description": ""
                },
                {
                    "name": "remotePath",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 357,
            "params": [
                {
                    "name": "localPath",
                    "description": ""
                },
                {
                    "name": "remotePath",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 370,
            "params": [
                {
                    "name": "remotePath",
                    "description": ""
                },
                {
                    "name": "localPath",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 385,
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 395,
            "params": [
                {
                    "name": "options",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 406,
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "choices",
                    "description": ""
                },
                {
                    "name": "then",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 426,
            "params": [
                {
                    "name": "skipNext",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "*"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 436,
            "params": [
                {
                    "name": "object",
                    "description": ""
                },
                {
                    "name": "fn",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 456,
            "params": [
                {
                    "name": "writeStream",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 467,
            "params": [
                {
                    "name": "other",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 480,
            "params": [
                {
                    "name": "transport",
                    "description": ""
                },
                {
                    "name": "then",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 664,
            "params": [
                {
                    "name": "transport",
                    "description": ""
                },
                {
                    "name": "then",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Cluc"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 686,
            "params": [
                {
                    "name": "err",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 710,
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "def",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js",
            "line": 735,
            "params": [
                {
                    "name": "message",
                    "description": ""
                },
                {
                    "name": "def",
                    "description": ""
                }
            ],
            "return": {
                "description": "",
                "type": "Function"
            },
            "class": "Cluc"
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 2,
            "description": "Module dependencies.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 14,
            "description": "Expose the root command.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 20,
            "description": "Expose `Command`.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 26,
            "description": "Expose `Option`.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 32,
            "description": "Initialize a new `Option` with the given `flags` and `description`.",
            "params": [
                {
                    "name": "flags",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 51,
            "description": "Return option name.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 64,
            "description": "Check if `arg` matches the short or long flag.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 76,
            "description": "Initialize a new `Command`.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 92,
            "description": "Inherit from `EventEmitter.prototype`.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 98,
            "description": "Add command `name`.\n\nThe `.action()` callback is invoked when the\ncommand `name` is specified via __ARGV__,\nand the remaining arguments are applied to the\nfunction for access.\n\nWhen the `name` is \"*\" an un-matched command\nwill be passed as the first arg, followed by\nthe rest of __ARGV__ remaining.\n\nExamples:\n\n     program\n       .version('0.0.1')\n       .option('-C, --chdir <path>', 'change the working directory')\n       .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n       .option('-T, --no-tests', 'ignore test hook')\n\n     program\n       .command('setup')\n       .description('run remote setup commands')\n       .action(function() {\n         console.log('setup');\n       });\n\n     program\n       .command('exec <cmd>')\n       .description('run the given remote command')\n       .action(function(cmd) {\n         console.log('exec \"%s\"', cmd);\n       });\n\n     program\n       .command('teardown <dir> [otherDirs...]')\n       .description('run teardown commands')\n       .action(function(dir, otherDirs) {\n         console.log('dir \"%s\"', dir);\n         if (otherDirs) {\n           otherDirs.forEach(function (oDir) {\n             console.log('dir \"%s\"', oDir);\n           });\n         }\n       });\n\n     program\n       .command('*')\n       .description('deploy the given env')\n       .action(function(env) {\n         console.log('deploying \"%s\"', env);\n       });\n\n     program.parse(process.argv);",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "desc",
                    "description": "for git-style sub-commands",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "the new command",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 179,
            "description": "Define argument syntax for the top-level command.",
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 189,
            "description": "Add an implicit `help [cmd]` subcommand\nwhich invokes `--help` for the given command.",
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 200,
            "description": "Parse expected `args`.\n\nFor example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 241,
            "description": "Register callback `fn` for the command.\n\nExamples:\n\n     program\n       .command('help')\n       .description('display verbose help')\n       .action(function() {\n          // output help here\n       });",
            "params": [
                {
                    "name": "fn",
                    "description": "",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 310,
            "description": "Define option with `flags`, `description` and optional\ncoercion `fn`.\n\nThe `flags` string should contain both the short and long flags,\nseparated by comma, a pipe or space. The following are all valid\nall will output this way when `--help` is used.\n\n   \"-p, --pepper\"\n   \"-p|--pepper\"\n   \"-p --pepper\"\n\nExamples:\n\n    // simple boolean defaulting to false\n    program.option('-p, --pepper', 'add pepper');\n\n    --pepper\n    program.pepper\n    // => Boolean\n\n    // simple boolean defaulting to true\n    program.option('-C, --no-cheese', 'remove cheese');\n\n    program.cheese\n    // => true\n\n    --no-cheese\n    program.cheese\n    // => false\n\n    // required argument\n    program.option('-C, --chdir <path>', 'change the working directory');\n\n    --chdir /tmp\n    program.chdir\n    // => \"/tmp\"\n\n    // optional argument\n    program.option('-c, --cheese [type]', 'add cheese [marble]');",
            "params": [
                {
                    "name": "flags",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "description",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "fn",
                    "description": "or default",
                    "type": "Function|Mixed"
                },
                {
                    "name": "defaultValue",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 418,
            "description": "Allow unknown options on the command line.",
            "params": [
                {
                    "name": "arg",
                    "description": "if `true` or omitted, no error will be thrown\nfor unknown options.",
                    "type": "Boolean"
                }
            ],
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 430,
            "description": "Parse `argv`, settings options and invoking commands when defined.",
            "params": [
                {
                    "name": "argv",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 469,
            "description": "Execute a sub-command executable.",
            "params": [
                {
                    "name": "argv",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "unknown",
                    "description": "",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 550,
            "description": "Normalize `args`, splitting joined short flags. For example\nthe arg \"-abc\" is equivalent to \"-a -b -c\".\nThis also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 592,
            "description": "Parse command `args`.\n\nWhen listener(s) are available those\ncallbacks are invoked, otherwise the \"*\"\nevent is emitted and those actions are invoked.",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 627,
            "description": "Return an option matching `arg` if any.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Option"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 643,
            "description": "Parse options from `argv` returning `argv`\nvoid of these options.",
            "params": [
                {
                    "name": "argv",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 722,
            "description": "Return an object containing options as key-value pairs",
            "return": {
                "description": "",
                "type": "Object"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 739,
            "description": "Argument `name` is missing.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 753,
            "description": "`Option` is missing an argument, but received `flag` or nothing.",
            "params": [
                {
                    "name": "option",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "flag",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 772,
            "description": "Unknown option `flag`.",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 787,
            "description": "Variadic argument with `name` is not the last argument as required.",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 801,
            "description": "Set the program version to `str`.\n\nThis method auto-registers the \"-V, --version\" flag\nwhich will print the version number when passed.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "flags",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "for chaining",
                "type": "Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 825,
            "description": "Set the description to `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 839,
            "description": "Set an alias for the command",
            "params": [
                {
                    "name": "alias",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 853,
            "description": "Set / get the command usage `str`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 876,
            "description": "Get the name of the command",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String|Command"
            },
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 888,
            "description": "Return the largest option length.",
            "return": {
                "description": "",
                "type": "Number"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 901,
            "description": "Return help for options.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 919,
            "description": "Return command help documentation.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 964,
            "description": "Return program help documentation.",
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1009,
            "description": "Output help information for this command",
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1020,
            "description": "Output help information and exit.",
            "api": "public",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1031,
            "description": "Camel-case the given `flag`",
            "params": [
                {
                    "name": "flag",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1045,
            "description": "Pad `str` to `width`.",
            "params": [
                {
                    "name": "str",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "width",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1059,
            "description": "Output help information if necessary",
            "params": [
                {
                    "name": "command",
                    "description": "to output help for",
                    "type": "Command"
                },
                {
                    "name": "array",
                    "description": "of options to search for -h or --help",
                    "type": "Array"
                }
            ],
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js",
            "line": 1077,
            "description": "Takes an argument an returns its human readable equivalent for help usage.",
            "params": [
                {
                    "name": "arg",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "api": "private",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 1,
            "description": "mixin authorization\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 22,
            "description": "authorization#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 68,
            "description": "authorization#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 113,
            "description": "authorization#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- scopes (Array): Optional. A list of scopes that this authorization is in.\n- note (String): Optional. A note to remind you what the OAuth token is for.\n- note_url (String): Optional. A URL to remind you what app the OAuth token is for.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 160,
            "description": "authorization#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- scopes (Array): Optional. A list of scopes that this authorization is in.\n- add_scopes (Array): Optional. A list of scopes to add to this authorization.\n- remove_scopes (Array): Optional. A list of scopes to remove from this authorization.\n- note (String): Optional. A note to remind you what the OAuth token is for.\n- note_url (String): Optional. A URL to remind you what app the OAuth token is for.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js",
            "line": 210,
            "description": "authorization#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 1,
            "description": "mixin events\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 22,
            "description": "events#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 68,
            "description": "events#getFromRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 116,
            "description": "events#getFromRepoIssues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 164,
            "description": "events#getFromRepoNetwork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 212,
            "description": "events#getFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 259,
            "description": "events#getReceived(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 306,
            "description": "events#getReceivedPublic(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 353,
            "description": "events#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 400,
            "description": "events#getFromUserPublic(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js",
            "line": 447,
            "description": "events#getFromUserOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 1,
            "description": "mixin gists\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 22,
            "description": "gists#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 69,
            "description": "gists#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 117,
            "description": "gists#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- description (String): Optional. \n- public (Boolean): Required. \n- files (Json): Required. Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 164,
            "description": "gists#edit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- description (String): Optional. \n- files (Json): Required. Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 211,
            "description": "gists#public(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 256,
            "description": "gists#starred(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 301,
            "description": "gists#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 346,
            "description": "gists#star(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 391,
            "description": "gists#deleteStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 436,
            "description": "gists#checkStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 481,
            "description": "gists#fork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 526,
            "description": "gists#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 571,
            "description": "gists#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 616,
            "description": "gists#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 662,
            "description": "gists#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 708,
            "description": "gists#editComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required. \n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js",
            "line": 755,
            "description": "gists#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 1,
            "description": "mixin gitdata\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 22,
            "description": "gitdata#getBlob(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 71,
            "description": "gitdata#createBlob(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- content (String): Required. \n- encoding (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 119,
            "description": "gitdata#getCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 166,
            "description": "gitdata#createCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- message (String): Required. String of the commit message\n- tree (String): Required. String of the SHA of the tree object this commit points to\n- parents (Array): Required. Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.\n- author (Json): Optional. \n- committer (Json): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 217,
            "description": "gitdata#getReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 264,
            "description": "gitdata#getAllReferences(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 312,
            "description": "gitdata#createReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 360,
            "description": "gitdata#updateReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- sha (String): Required. \n- force (Boolean): Optional. Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 409,
            "description": "gitdata#deleteReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 456,
            "description": "gitdata#getTag(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 503,
            "description": "gitdata#createTag(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- tag (String): Required. String of the tag\n- message (String): Required. String of the tag message\n- object (String): Required. String of the SHA of the git object this is tagging\n- type (String): Required. String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.\n- tagger (Json): Required. JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 554,
            "description": "gitdata#getTree(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- recursive (Boolean): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js",
            "line": 602,
            "description": "gitdata#createTree(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- tree (Json): Required. Array of Hash objects (of path, mode, type and sha) specifying a tree structure\n- base_tree (String): Optional. String of the SHA1 of the tree you want to update with new data",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js",
            "line": 1,
            "description": "mixin gitignore\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js",
            "line": 22,
            "description": "gitignore#templates(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js",
            "line": 67,
            "description": "gitignore#template(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Required. The name of the .gitignore template to get",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/index.js",
            "line": 1,
            "description": "class Github\n\nA Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1,
            "description": "mixin issues\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 22,
            "description": "issues#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- filter (String): Optional.  Validation rule: ` ^(all|assigned|created|mentioned|subscribed)$ `.\n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- labels (String): Optional. String list of comma separated Label names. Example: bug,ui,@high\n- sort (String): Optional.  Validation rule: ` ^(created|updated|comments)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 74,
            "description": "issues#repoIssues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- milestone (String): Optional.  Validation rule: ` ^([0-9]+|none|\\*)$ `.\n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- assignee (String): Optional. String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User.\n- creator (String): Optional. The user that created the issue.\n- mentioned (String): Optional. String User login.\n- labels (String): Optional. String list of comma separated Label names. Example: bug,ui,@high\n- sort (String): Optional.  Validation rule: ` ^(created|updated|comments)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 131,
            "description": "issues#getRepoIssue(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 178,
            "description": "issues#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- body (String): Optional. \n- assignee (String): Optional. Login for the user that this issue should be assigned to.\n- milestone (Number): Optional. Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.\n- labels (Json): Optional. Array of strings - Labels to associate with this issue.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 229,
            "description": "issues#edit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- title (String): Optional. \n- body (String): Optional. \n- assignee (String): Optional. Login for the user that this issue should be assigned to.\n- milestone (Number): Optional. Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.\n- labels (Json): Optional. Array of strings - Labels to associate with this issue.\n- state (String): Optional. open or closed Validation rule: ` ^(open|closed)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 282,
            "description": "issues#repoComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sort (String): Optional.  Validation rule: ` ^(created|updated)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 333,
            "description": "issues#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 382,
            "description": "issues#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 429,
            "description": "issues#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 477,
            "description": "issues#editComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 525,
            "description": "issues#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 572,
            "description": "issues#getEvents(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 621,
            "description": "issues#getRepoEvents(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 669,
            "description": "issues#getEvent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 716,
            "description": "issues#getLabels(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 764,
            "description": "issues#getLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 811,
            "description": "issues#createLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- color (String): Required. 6 character hex code, without a leading #.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 859,
            "description": "issues#updateLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- color (String): Required. 6 character hex code, without a leading #.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 907,
            "description": "issues#deleteLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 954,
            "description": "issues#getIssueLabels(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1001,
            "description": "issues#getAllMilestones(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- sort (String): Optional. due_date, completeness, default: due_date Validation rule: ` ^(due_date|completeness)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1051,
            "description": "issues#getMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1098,
            "description": "issues#createMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- description (String): Optional. \n- due_on (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1148,
            "description": "issues#updateMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- title (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- description (String): Optional. \n- due_on (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js",
            "line": 1199,
            "description": "issues#deleteMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js",
            "line": 1,
            "description": "mixin markdown\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js",
            "line": 22,
            "description": "markdown#render(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- text (String): Required. The Markdown text to render\n- mode (String): Optional. The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly. Validation rule: ` ^(markdown|gfm)$ `.\n- context (String): Optional. The repository context, only taken into account when rendering as `gfm`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js",
            "line": 69,
            "description": "markdown#renderRaw(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- data (String): Required. Raw data to send as the body of the request",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js",
            "line": 1,
            "description": "mixin misc\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js",
            "line": 22,
            "description": "misc#emojis(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js",
            "line": 67,
            "description": "misc#meta(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js",
            "line": 112,
            "description": "misc#rateLimit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 1,
            "description": "mixin orgs\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 22,
            "description": "orgs#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 69,
            "description": "orgs#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 116,
            "description": "orgs#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- billing_email (String): Optional. Billing email address. This address is not publicized.\n- company (String): Optional. \n- email (String): Optional. Publicly visible email address.\n- location (String): Optional. \n- name (String): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 166,
            "description": "orgs#getMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- filter (String): Optional.  Validation rule: ` ^(all|2fa_disabled)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 214,
            "description": "orgs#getMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 260,
            "description": "orgs#removeMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 306,
            "description": "orgs#getPublicMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 351,
            "description": "orgs#getPublicMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 397,
            "description": "orgs#publicizeMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 443,
            "description": "orgs#concealMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 489,
            "description": "orgs#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 536,
            "description": "orgs#getTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 581,
            "description": "orgs#createTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- name (String): Required. \n- repo_names (Array): Optional. Array of strings\n- permission (String): Optional. `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 629,
            "description": "orgs#updateTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- name (String): Required. \n- permission (String): Optional. `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 676,
            "description": "orgs#deleteTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 721,
            "description": "orgs#getTeamMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 768,
            "description": "orgs#getTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 814,
            "description": "orgs#addTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 860,
            "description": "orgs#deleteTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 906,
            "description": "orgs#addTeamMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 952,
            "description": "orgs#getTeamRepos(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 999,
            "description": "orgs#getTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 1046,
            "description": "orgs#addTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js",
            "line": 1093,
            "description": "orgs#deleteTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 1,
            "description": "mixin pullRequests\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 22,
            "description": "pullRequests#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- head (String): Optional. \n- base (String): Optional. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- sort (String): Optional. Possible values are: `created`, `updated`, `popularity`, `long-running`, Default: `created` Validation rule: ` ^(created|updated|popularity|long-running)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 75,
            "description": "pullRequests#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 122,
            "description": "pullRequests#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- body (String): Optional. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 172,
            "description": "pullRequests#createFromIssue(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- issue (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 221,
            "description": "pullRequests#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- title (String): Required. \n- body (String): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 271,
            "description": "pullRequests#getCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 320,
            "description": "pullRequests#getFiles(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 369,
            "description": "pullRequests#getMerged(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 418,
            "description": "pullRequests#merge(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- commit_message (String): Optional. The message that will be used for the merge commit",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 466,
            "description": "pullRequests#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 515,
            "description": "pullRequests#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 562,
            "description": "pullRequests#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required. \n- commit_id (String): Required. Sha of the commit to comment on.\n- path (String): Required. Relative path of the file to comment on.\n- position (Number): Required. Column index in the diff to comment on.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 613,
            "description": "pullRequests#createCommentReply(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required. \n- in_reply_to (Number): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 662,
            "description": "pullRequests#updateComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js",
            "line": 710,
            "description": "pullRequests#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 1,
            "description": "mixin releases\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 22,
            "description": "releases#listReleases(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 70,
            "description": "releases#getRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 117,
            "description": "releases#createRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- repo (String): Required. \n- tag_name (String): Required. String of the tag\n- target_commitish (String): Optional. Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).\n- name (String): Optional. \n- body (String): Optional. \n- draft (Boolean): Optional. true to create a draft (unpublished) release, false to create a published one. Default: false\n- prerelease (Boolean): Optional. true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 169,
            "description": "releases#editRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- tag_name (String): Required. String of the tag\n- target_commitish (String): Optional. Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).\n- name (String): Optional. \n- body (String): Optional. \n- draft (Boolean): Optional. true to create a draft (unpublished) release, false to create a published one. Default: false\n- prerelease (Boolean): Optional. true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 222,
            "description": "releases#deleteRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 269,
            "description": "releases#listAssets(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 316,
            "description": "releases#getAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 363,
            "description": "releases#uploadAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- name (String): Required. the file name of the asset",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 411,
            "description": "releases#editAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- name (String): Required. \n- label (String): Optional. An alternate short description of the asset. Used in place of the filename.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js",
            "line": 460,
            "description": "releases#deleteAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1,
            "description": "mixin repos\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 22,
            "description": "repos#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- type (String): Optional. Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`. Validation rule: ` ^(all|owner|public|private|member)$ `.\n- sort (String): Optional. Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 71,
            "description": "repos#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- type (String): Optional. Possible values: `all`, `owner`, `member`. Default: `public`. Validation rule: ` ^(all|owner|member)$ `.\n- sort (String): Optional. Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 121,
            "description": "repos#getFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- type (String): Optional. Possible values: `all`, `public`, `member`. Default: `all`. Validation rule: ` ^(all|public|member)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 169,
            "description": "repos#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- auto_init (Boolean): Optional. True to create an initial commit with empty README. Default is false\n- gitignore_template (String): Optional. Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 222,
            "description": "repos#createFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- auto_init (Boolean): Optional. True to create an initial commit with empty README. Default is false\n- gitignore_template (String): Optional. Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.\n- team_id (Number): Optional. The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 277,
            "description": "repos#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 323,
            "description": "repos#one(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 368,
            "description": "repos#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- default_branch (String): Optional. Updates the default branch for this repository.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 422,
            "description": "repos#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 468,
            "description": "repos#merge(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.\n- commit_message (String): Optional. Commit message to use for the merge commit. If omitted, a default message will be used.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 517,
            "description": "repos#getContributors(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- anon (Boolean): Optional. Set to 1 or true to include anonymous contributors in results.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 566,
            "description": "repos#getLanguages(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 614,
            "description": "repos#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 662,
            "description": "repos#getTags(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 710,
            "description": "repos#getBranches(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 758,
            "description": "repos#getBranch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- branch (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 807,
            "description": "repos#getCollaborators(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 855,
            "description": "repos#getCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 902,
            "description": "repos#addCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 949,
            "description": "repos#removeCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 996,
            "description": "repos#getCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Optional. Sha or branch to start listing commits from.\n- path (String): Optional. Only commits containing this file path will be returned.\n- author (String): Optional. GitHub login or email address by which to filter by commit author.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- until (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1049,
            "description": "repos#getCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1096,
            "description": "repos#getAllCommitComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1144,
            "description": "repos#getCommitComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1193,
            "description": "repos#createCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- body (String): Required. \n- commit_id (String): Required. Sha of the commit to comment on.\n- path (String): Optional. Relative path of the file to comment on.\n- position (Number): Optional. Line index in the diff to comment on.\n- line (Number): Optional. Line number in the file to comment on. Defaults to 1.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1245,
            "description": "repos#getCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1292,
            "description": "repos#updateCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- body (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1340,
            "description": "repos#compareCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1388,
            "description": "repos#deleteCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1435,
            "description": "repos#getReadme(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1482,
            "description": "repos#getContent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Optional. The content path.\n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1530,
            "description": "repos#createContent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- content (String): Optional. \n- message (String): Optional. \n- path (String): Optional. The content path.\n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1580,
            "description": "repos#createFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- content (String): Required. The new file content, Base64 encoded.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1632,
            "description": "repos#updateFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- content (String): Required. The updated file content, Base64 encoded.\n- sha (String): Required. The blob SHA of the file being replaced.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1685,
            "description": "repos#deleteFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- sha (String): Required. The blob SHA of the file being removed.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1737,
            "description": "repos#getArchiveLink(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Optional. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- archive_format (String): Required. Either tarball or zipball Validation rule: ` ^(tarball|zipball)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1785,
            "description": "repos#getDownloads(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1833,
            "description": "repos#getDownload(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1880,
            "description": "repos#deleteDownload(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1927,
            "description": "repos#getForks(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sort (String): Optional. Possible values: `newest`, `oldest`, `watchers`, default: `newest`. Validation rule: ` ^(newest|oldest|watchers)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 1976,
            "description": "repos#fork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- organization (String): Optional. Organization login. The repository will be forked into this organization.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2023,
            "description": "repos#getKeys(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2071,
            "description": "repos#getKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2118,
            "description": "repos#createKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2166,
            "description": "repos#updateKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2215,
            "description": "repos#deleteKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2262,
            "description": "repos#getStargazers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2310,
            "description": "repos#getStarred(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2356,
            "description": "repos#getStarredFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2403,
            "description": "repos#getStarring(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2451,
            "description": "repos#star(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2497,
            "description": "repos#unStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2543,
            "description": "repos#getWatchers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2591,
            "description": "repos#getWatched(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2637,
            "description": "repos#getWatchedFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2684,
            "description": "repos#getWatching(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2732,
            "description": "repos#watch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2778,
            "description": "repos#unWatch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2824,
            "description": "repos#getHooks(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2872,
            "description": "repos#getHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2919,
            "description": "repos#createHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- config (Json): Required. A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.\n- events (Array): Optional. Determines what events the hook is triggered for. Default: `['push']`.\n- active (Boolean): Optional. Determines whether the hook is actually triggered on pushes.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 2969,
            "description": "repos#updateHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- name (String): Required. \n- config (Json): Required. A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.\n- events (Array): Optional. Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`.\n- add_events (Array): Optional. Determines a list of events to be added to the list of events that the Hook triggers for.\n- remove_events (Array): Optional. Determines a list of events to be removed from the list of events that the Hook triggers for.\n- active (Boolean): Optional. Determines whether the hook is actually triggered on pushes.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3022,
            "description": "repos#testHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3069,
            "description": "repos#deleteHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3116,
            "description": "repos#getStatsContributors(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3162,
            "description": "repos#getStatsCommitActivity(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3208,
            "description": "repos#getStatsCodeFrequency(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3254,
            "description": "repos#getStatsParticipation(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3300,
            "description": "repos#getStatsPunchCard(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3346,
            "description": "repos#getDeployments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- sha (String): Optional. The short or long sha that was recorded at creation time. Default: none.\n- ref (String): Optional. The name of the ref. This can be a branch, tag, or sha. Default: none.\n- task (String): Optional. The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.\n- environment (String): Optional. The name of the environment that was deployed to. e.g. staging or production. Default: none.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3398,
            "description": "repos#createDeployment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- ref (String): Required. The ref to deploy. This can be a branch, tag, or sha.\n- task (String): Required. The named task to execute. e.g. deploy or deploy:migrations. Default: deploy\n- auto_merge (Boolean): Optional. Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true\n- required_contexts (Array): Optional. Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.\n- payload (String): Optional. Optional JSON payload with extra information about the deployment. Default: ''\n- environment (String): Optional. The name of the environment that was deployed to. e.g. staging or production. Default: none.\n- description (String): Optional. Optional short description. Default: ''\n- user (String): Required. \n- repo (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3451,
            "description": "repos#getDeploymentStatuses(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js",
            "line": 3498,
            "description": "repos#createDeploymentStatus(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- state (String): Optional. The state of the status. Can be one of pending, success, error, or failure.\n- target_url (String): Optional. The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: ''\n- description (String): Optional. A short description of the status. Default: ''\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 1,
            "description": "mixin search\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 22,
            "description": "search#code(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. indexed only Validation rule: ` ^indexed$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 71,
            "description": "search#issues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. comments, created, or updated Validation rule: ` ^(comments|created|updated)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 120,
            "description": "search#repos(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. stars, forks, or updated Validation rule: ` ^(stars|forks|updated)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 169,
            "description": "search#users(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. followers, repositories, or joined Validation rule: ` ^(followers|repositories|joined)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js",
            "line": 218,
            "description": "search#email(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- email (String): Required. Email address",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js",
            "line": 1,
            "description": "mixin statuses\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js",
            "line": 22,
            "description": "statuses#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js",
            "line": 69,
            "description": "statuses#getCombined(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js",
            "line": 116,
            "description": "statuses#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- state (String): Required. State of the status - can be one of pending, success, error, or failure. Validation rule: ` ^(pending|success|error|failure)$ `.\n- target_url (String): Optional. Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.\n- description (String): Optional. Short description of the status.\n- context (String): Optional. A string label to differentiate this status from the status of other systems.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 1,
            "description": "mixin user\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 22,
            "description": "user#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Number): Optional. The integer ID of the last User that you’ve seen.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 67,
            "description": "user#getFrom(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 112,
            "description": "user#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 157,
            "description": "user#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Optional. \n- email (String): Optional. \n- blog (String): Optional. \n- company (String): Optional. \n- location (String): Optional. \n- hireable (Boolean): Optional. \n- bio (String): Optional.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 208,
            "description": "user#getOrgs(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 254,
            "description": "user#editOrganizationMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- state (String): Required.  Validation rule: ` ^(open|closed|active)$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 300,
            "description": "user#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 346,
            "description": "user#getEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 392,
            "description": "user#addEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 437,
            "description": "user#deleteEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 482,
            "description": "user#getFollowers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 529,
            "description": "user#getFollowingFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 576,
            "description": "user#getFollowing(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 622,
            "description": "user#getFollowUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 669,
            "description": "user#followUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 714,
            "description": "user#unFollowUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 759,
            "description": "user#getKeys(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 805,
            "description": "user#getKeysFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 852,
            "description": "user#getKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 897,
            "description": "user#createKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- title (String): Required. \n- key (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 943,
            "description": "user#updateKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js",
            "line": 990,
            "description": "user#deleteKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/example.js",
            "line": 1,
            "description": "Example\n \nGithub API usage example.\n \nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <mike@c9.io>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/oauth.js",
            "line": 1,
            "description": "OAuth\n \nOAuth usage example.\n \nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <mike@c9.io>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js",
            "line": 1,
            "description": "class HttpError\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js",
            "line": 23,
            "description": "HttpError#toString() -> String\n \nReturns the stringified version of the error (i.e. the message).",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js",
            "line": 32,
            "description": "HttpError#toJSON() -> Object\n \nReturns a JSON object representation of the error.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/generate.js",
            "line": 2,
            "description": "class ApiGenerator\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 9,
            "description": "class Client\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>\n\n [[Client]] can load any version of the [[github]] client API, with the\n requirement that a valid routes.json definition file is present in the\n `api/[VERSION]` directory and that the routes found in this file are\n implemented as well.\n\n Upon instantiation of the [[Client]] class, the routes.json file is loaded\n from the API version specified in the configuration and, parsed and from it\n the routes for HTTP requests are extracted. For each HTTP endpoint to the\n HTTP server, a method is generated which accepts a Javascript Object\n with parameters and an optional callback to be invoked when the API request\n returns from the server or when the parameters could not be validated.\n\n When an HTTP endpoint is processed and a method is generated as described\n above, [[Client]] also sets up parameter validation with the rules as\n defined in the routes.json. A full example that illustrates how this works\n is shown below:\n\n ##### Example\n\n First, we look at a listing of a sample routes.json routes definition file:\n\n     {\n         \"defines\": {\n             \"constants\": {\n                 \"name\": \"Github\",\n                 \"description\": \"A Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.\",\n                 \"protocol\": \"https\",\n                 \"host\": \"api.github.com\",\n                 \"port\": 443,\n                 \"dateFormat\": \"YYYY-MM-DDTHH:MM:SSZ\",\n                 \"requestFormat\": \"json\"\n             },\n             \"response-headers\": [\n                 \"X-RateLimit-Limit\",\n                 \"X-RateLimit-Remaining\",\n                 \"Link\"\n             ],\n             \"params\": {\n                 \"files\": {\n                     \"type\": \"Json\",\n                     \"required\": true,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'\"\n                 },\n                 \"user\": {\n                     \"type\": \"String\",\n                     \"required\": true,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"\"\n                 },\n                 \"description\": {\n                     \"type\": \"String\",\n                     \"required\": false,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"\"\n                 },\n                 \"page\": {\n                     \"type\": \"Number\",\n                     \"required\": false,\n                     \"validation\": \"^[0-9]+$\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"Page number of the results to fetch.\"\n                 },\n                 \"per_page\": {\n                     \"type\": \"Number\",\n                     \"required\": false,\n                     \"validation\": \"^[0-9]+$\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"A custom page size up to 100. Default is 30.\"\n                 }\n             }\n         },\n\n         \"gists\": {\n             \"get-from-user\": {\n                 \"url\": \":user/gists\",\n                 \"method\": \"GET\",\n                 \"params\": {\n                     \"$user\": null,\n                     \"$page\": null,\n                     \"$per_page\": null\n                 }\n             },\n\n             \"create\": {\n                 \"url\": \"/gists\",\n                 \"method\": \"POST\",\n                 \"params\": {\n                     \"$description\": null,\n                     \"public\": {\n                         \"type\": \"Boolean\",\n                         \"required\": true,\n                         \"validation\": \"\",\n                         \"invalidmsg\": \"\",\n                         \"description\": \"\"\n                     },\n                     \"$files\": null\n                 }\n             }\n         }\n      }\n\n You probably noticed that the definition is quite verbose and the decision\n for its design was made to be verbose whilst still allowing for basic variable\n definitions and substitions for request parameters.\n\n There are two sections; 'defines' and 'gists' in this example.\n\n The `defines` section contains a list of `constants` that will be used by the\n [[Client]] to make requests to the right URL that hosts the API.\n The `gists` section defines the endpoints for calls to the API server, for\n gists specifically in this example, but the other API sections are defined in\n the exact same way.\n These definitions are parsed and methods are created that the client can call\n to make an HTTP request to the server.\n there is one endpoint defined: .\n In this example, the endpoint `gists/get-from-user` will be exposed as a member\n on the [[Client]] object and may be invoked with\n\n     client.getFromUser({\n         \"user\": \"bob\"\n     }, function(err, ret) {\n         // do something with the result here.\n     });\n\n     // or to fetch a specfic page:\n     client.getFromUser({\n         \"user\": \"bob\",\n         \"page\": 2,\n         \"per_page\": 100\n     }, function(err, ret) {\n         // do something with the result here.\n     });\n\n All the parameters as specified in the Object that is passed to the function\n as first argument, will be validated according to the rules in the `params`\n block of the route definition.\n Thus, in the case of the `user` parameter, according to the definition in\n the `params` block, it's a variable that first needs to be looked up in the\n `params` block of the `defines` section (at the top of the JSON file). Params\n that start with a `$` sign will be substituted with the param with the same\n name from the `defines/params` section.\n There we see that it is a required parameter (needs to hold a value). In other\n words, if the validation requirements are not met, an HTTP error is passed as\n first argument of the callback.\n\n Implementation Notes: the `method` is NOT case sensitive, whereas `url` is.\n The `url` parameter also supports denoting parameters inside it as follows:\n\n     \"get-from-user\": {\n         \"url\": \":user/gists\",\n         \"method\": \"GET\"\n         ...\n     }",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 197,
            "description": "Client#setupRoutes() -> null\n\nConfigures the routes as defined in a routes.json file of an API version\n\n[[Client#setupRoutes]] is invoked by the constructor, takes the\ncontents of the JSON document that contains the definitions of all the\navailable API routes and iterates over them.\n\nIt first recurses through each definition block until it reaches an API\nendpoint. It knows that an endpoint is found when the `url` and `param`\ndefinitions are found as a direct member of a definition block.\nThen the availability of an implementation by the API is checked; if it's\nnot present, this means that a portion of the API as defined in the routes.json\nfile is not implemented properly, thus an exception is thrown.\nAfter this check, a method is attached to the [[Client]] instance\nand becomes available for use. Inside this method, the parameter validation\nand typecasting is done, according to the definition of the parameters in\nthe `params` block, upon invocation.\n\nThis mechanism ensures that the handlers ALWAYS receive normalized data\nthat is of the correct format and type. JSON parameters are parsed, Strings\nare trimmed, Numbers and Floats are casted and checked for NaN after that.\n\nNote: Query escaping for usage with SQL products is something that can be\nimplemented additionally by adding an additional parameter type.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 379,
            "description": "Client#authenticate(options) -> null\n    - options (Object): Object containing the authentication type and credentials\n        - type (String): One of the following: `basic` or `oauth`\n        - username (String): Github username\n        - password (String): Password to your account\n        - token (String): OAuth2 token\n\nSet an authentication method to have access to protected resources.\n\n##### Example\n\n    // basic\n    github.authenticate({\n        type: \"basic\",\n        username: \"mikedeboertest\",\n        password: \"test1324\"\n    });\n\n    // or oauth\n    github.authenticate({\n        type: \"oauth\",\n        token: \"e5a4a27487c26e571892846366de023349321a73\"\n    });\n\n    // or oauth key/ secret\n    github.authenticate({\n        type: \"oauth\",\n        key: \"clientID\",\n        secret: \"clientSecret\"\n    });\n\n    // or token\n    github.authenticate({\n        type: \"token\",\n        token: \"userToken\",\n    });",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 452,
            "description": "Client#hasNextPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the next page",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 462,
            "description": "Client#hasPreviousPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the previous page",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 472,
            "description": "Client#hasLastPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the last page",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 482,
            "description": "Client#hasFirstPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the first page",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 537,
            "description": "Client#getNextPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the next page, based on the contents of the `Link` header",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 548,
            "description": "Client#getPreviousPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the previous page, based on the contents of the `Link` header",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 559,
            "description": "Client#getLastPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the last page, based on the contents of the `Link` header",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 570,
            "description": "Client#getFirstPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the first page, based on the contents of the `Link` header",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js",
            "line": 648,
            "description": "Client#httpSend(msg, block, callback) -> null\n    - msg (Object): parameters to send as the request body\n    - block (Object): parameter definition from the `routes.json` file that\n        contains validation rules\n    - callback (Function): function to be called when the request returns.\n        If the the request returns with an error, the error is passed to\n        the callback as its first argument (NodeJS-style).\n\nSend an HTTP request to the server and pass the result to a callback.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 1,
            "description": "class Util\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 14,
            "description": "Util#extend(dest, src, noOverwrite) -> Object\n    - dest (Object): destination object\n    - src (Object): source object\n    - noOverwrite (Boolean): set to `true` to overwrite values in `src`\n\nShallow copy of properties from the `src` object to the `dest` object. If the\n`noOverwrite` argument is set to to `true`, the value of a property in `src`\nwill not be overwritten if it already exists.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 32,
            "description": "Util#escapeRegExp(str) -> String\n    - str (String): string to escape\n \nEscapes characters inside a string that will an error when it is used as part\nof a regex upon instantiation like in `new RegExp(\"[0-9\" + str + \"]\")`",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 43,
            "description": "Util#toCamelCase(str, [upper]) -> String\n    - str (String): string to transform\n    - upper (Boolean): set to `true` to transform to CamelCase\n \nTransform a string that contains spaces or dashes to camelCase. If `upper` is\nset to `true`, the string will be transformed to CamelCase.\n \nExample:\n\n    Util.toCamelCase(\"why U no-work\"); // returns 'whyUNoWork'\n    Util.toCamelCase(\"I U no-work\", true); // returns 'WhyUNoWork'",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 65,
            "description": "Util#isTrue(c) -> Boolean\n    - c (mixed): value the variable to check. Possible values:\n        true   The function returns true.\n        'true' The function returns true.\n        'on'   The function returns true.\n        1      The function returns true.\n        '1'    The function returns true.\n \nDetermines whether a string is true in the html attribute sense.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 80,
            "description": "Util#isFalse(c) -> Boolean\n    - c (mixed): value the variable to check. Possible values:\n        false   The function returns true.\n        'false' The function returns true.\n        'off'   The function returns true.\n        0       The function returns true.\n        '0'     The function returns true.\n \nDetermines whether a string is false in the html attribute sense.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js",
            "line": 103,
            "description": "Util#log(arg1, [arg2], [type]) -> null\n    - arg1 (mixed): messages to be printed to the standard output\n    - type (String): type denotation of the message. Possible values:\n        'info', 'error', 'fatal', 'exit'. Optional, defaults to 'info'.\n \nUnified logging to the console; arguments passed to this function will put logged\nto the standard output of the current process and properly formatted.\nAny non-String object will be inspected by the NodeJS util#inspect utility\nfunction.\nMessages will be prefixed with its type (with corresponding font color), like so:\n \n    [info] informational message\n    [error] error message\n    [fatal] fatal error message\n    [exit] program exit message (not an error)\n \n The type of message can be defined by passing it to this function as the last/ \n final argument. If the type can not be found, this last/ final argument will be\n regarded as yet another message.",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js",
            "line": 346,
            "description": "Ensure some object is a coerced to a string",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js",
            "line": 552,
            "description": "_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "author": "github.com/rwz",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/helper/makeString.js",
            "line": 1,
            "description": "Ensure some object is a coerced to a string",
            "class": ""
        },
        {
            "file": "/home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/prune.js",
            "line": 1,
            "description": "_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "author": "github.com/rwz",
            "class": ""
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:43"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:54"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:65"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:85"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:97"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:109"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:121"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:133"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:146"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:159"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:172"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:185"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:198"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:211"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:224"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:236"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:248"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:260"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:272"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:284"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:296"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:308"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:320"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:332"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:344"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:357"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:370"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:385"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:395"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:406"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:426"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:436"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:456"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:467"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:480"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:664"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:686"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:710"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:735"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:32"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:51"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:64"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:76"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:98"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:179"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:189"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:200"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:241"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:310"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:418"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:430"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:469"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:550"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:592"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:627"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:643"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:722"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:739"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:753"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:772"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:787"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:801"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:825"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:839"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:853"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:876"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:888"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:901"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:919"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:964"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1009"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1020"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1031"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1045"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1059"
        },
        {
            "message": "unknown tag: api",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1077"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:43"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:54"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:65"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:76"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:85"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:97"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:109"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:121"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:133"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:146"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:159"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:172"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:185"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:198"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:211"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:224"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:236"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:248"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:260"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:272"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:284"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:296"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:308"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:320"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:332"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:344"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:357"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:370"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:385"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:395"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:406"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:426"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:436"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:456"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:467"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:480"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:664"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:686"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:710"
        },
        {
            "message": "Missing item type",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/cluc/lib/cluc.js:735"
        },
        {
            "message": "Missing item type\nModule dependencies.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:2"
        },
        {
            "message": "Missing item type\nExpose the root command.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:14"
        },
        {
            "message": "Missing item type\nExpose `Command`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:20"
        },
        {
            "message": "Missing item type\nExpose `Option`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:26"
        },
        {
            "message": "Missing item type\nInitialize a new `Option` with the given `flags` and `description`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:32"
        },
        {
            "message": "Missing item type\nReturn option name.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:51"
        },
        {
            "message": "Missing item type\nCheck if `arg` matches the short or long flag.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:64"
        },
        {
            "message": "Missing item type\nInitialize a new `Command`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:76"
        },
        {
            "message": "Missing item type\nInherit from `EventEmitter.prototype`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:92"
        },
        {
            "message": "Missing item type\nAdd command `name`.\n\nThe `.action()` callback is invoked when the\ncommand `name` is specified via __ARGV__,\nand the remaining arguments are applied to the\nfunction for access.\n\nWhen the `name` is \"*\" an un-matched command\nwill be passed as the first arg, followed by\nthe rest of __ARGV__ remaining.\n\nExamples:\n\n     program\n       .version('0.0.1')\n       .option('-C, --chdir <path>', 'change the working directory')\n       .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n       .option('-T, --no-tests', 'ignore test hook')\n\n     program\n       .command('setup')\n       .description('run remote setup commands')\n       .action(function() {\n         console.log('setup');\n       });\n\n     program\n       .command('exec <cmd>')\n       .description('run the given remote command')\n       .action(function(cmd) {\n         console.log('exec \"%s\"', cmd);\n       });\n\n     program\n       .command('teardown <dir> [otherDirs...]')\n       .description('run teardown commands')\n       .action(function(dir, otherDirs) {\n         console.log('dir \"%s\"', dir);\n         if (otherDirs) {\n           otherDirs.forEach(function (oDir) {\n             console.log('dir \"%s\"', oDir);\n           });\n         }\n       });\n\n     program\n       .command('*')\n       .description('deploy the given env')\n       .action(function(env) {\n         console.log('deploying \"%s\"', env);\n       });\n\n     program.parse(process.argv);",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:98"
        },
        {
            "message": "Missing item type\nDefine argument syntax for the top-level command.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:179"
        },
        {
            "message": "Missing item type\nAdd an implicit `help [cmd]` subcommand\nwhich invokes `--help` for the given command.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:189"
        },
        {
            "message": "Missing item type\nParse expected `args`.\n\nFor example `[\"[type]\"]` becomes `[{ required: false, name: 'type' }]`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:200"
        },
        {
            "message": "Missing item type\nRegister callback `fn` for the command.\n\nExamples:\n\n     program\n       .command('help')\n       .description('display verbose help')\n       .action(function() {\n          // output help here\n       });",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:241"
        },
        {
            "message": "Missing item type\nDefine option with `flags`, `description` and optional\ncoercion `fn`.\n\nThe `flags` string should contain both the short and long flags,\nseparated by comma, a pipe or space. The following are all valid\nall will output this way when `--help` is used.\n\n   \"-p, --pepper\"\n   \"-p|--pepper\"\n   \"-p --pepper\"\n\nExamples:\n\n    // simple boolean defaulting to false\n    program.option('-p, --pepper', 'add pepper');\n\n    --pepper\n    program.pepper\n    // => Boolean\n\n    // simple boolean defaulting to true\n    program.option('-C, --no-cheese', 'remove cheese');\n\n    program.cheese\n    // => true\n\n    --no-cheese\n    program.cheese\n    // => false\n\n    // required argument\n    program.option('-C, --chdir <path>', 'change the working directory');\n\n    --chdir /tmp\n    program.chdir\n    // => \"/tmp\"\n\n    // optional argument\n    program.option('-c, --cheese [type]', 'add cheese [marble]');",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:310"
        },
        {
            "message": "Missing item type\nAllow unknown options on the command line.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:418"
        },
        {
            "message": "Missing item type\nParse `argv`, settings options and invoking commands when defined.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:430"
        },
        {
            "message": "Missing item type\nExecute a sub-command executable.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:469"
        },
        {
            "message": "Missing item type\nNormalize `args`, splitting joined short flags. For example\nthe arg \"-abc\" is equivalent to \"-a -b -c\".\nThis also normalizes equal sign and splits \"--abc=def\" into \"--abc def\".",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:550"
        },
        {
            "message": "Missing item type\nParse command `args`.\n\nWhen listener(s) are available those\ncallbacks are invoked, otherwise the \"*\"\nevent is emitted and those actions are invoked.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:592"
        },
        {
            "message": "Missing item type\nReturn an option matching `arg` if any.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:627"
        },
        {
            "message": "Missing item type\nParse options from `argv` returning `argv`\nvoid of these options.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:643"
        },
        {
            "message": "Missing item type\nReturn an object containing options as key-value pairs",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:722"
        },
        {
            "message": "Missing item type\nArgument `name` is missing.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:739"
        },
        {
            "message": "Missing item type\n`Option` is missing an argument, but received `flag` or nothing.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:753"
        },
        {
            "message": "Missing item type\nUnknown option `flag`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:772"
        },
        {
            "message": "Missing item type\nVariadic argument with `name` is not the last argument as required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:787"
        },
        {
            "message": "Missing item type\nSet the program version to `str`.\n\nThis method auto-registers the \"-V, --version\" flag\nwhich will print the version number when passed.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:801"
        },
        {
            "message": "Missing item type\nSet the description to `str`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:825"
        },
        {
            "message": "Missing item type\nSet an alias for the command",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:839"
        },
        {
            "message": "Missing item type\nSet / get the command usage `str`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:853"
        },
        {
            "message": "Missing item type\nGet the name of the command",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:876"
        },
        {
            "message": "Missing item type\nReturn the largest option length.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:888"
        },
        {
            "message": "Missing item type\nReturn help for options.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:901"
        },
        {
            "message": "Missing item type\nReturn command help documentation.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:919"
        },
        {
            "message": "Missing item type\nReturn program help documentation.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:964"
        },
        {
            "message": "Missing item type\nOutput help information for this command",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1009"
        },
        {
            "message": "Missing item type\nOutput help information and exit.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1020"
        },
        {
            "message": "Missing item type\nCamel-case the given `flag`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1031"
        },
        {
            "message": "Missing item type\nPad `str` to `width`.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1045"
        },
        {
            "message": "Missing item type\nOutput help information if necessary",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1059"
        },
        {
            "message": "Missing item type\nTakes an argument an returns its human readable equivalent for help usage.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/commander/index.js:1077"
        },
        {
            "message": "Missing item type\nmixin authorization\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:1"
        },
        {
            "message": "Missing item type\nauthorization#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:22"
        },
        {
            "message": "Missing item type\nauthorization#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:68"
        },
        {
            "message": "Missing item type\nauthorization#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- scopes (Array): Optional. A list of scopes that this authorization is in.\n- note (String): Optional. A note to remind you what the OAuth token is for.\n- note_url (String): Optional. A URL to remind you what app the OAuth token is for.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:113"
        },
        {
            "message": "Missing item type\nauthorization#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- scopes (Array): Optional. A list of scopes that this authorization is in.\n- add_scopes (Array): Optional. A list of scopes to add to this authorization.\n- remove_scopes (Array): Optional. A list of scopes to remove from this authorization.\n- note (String): Optional. A note to remind you what the OAuth token is for.\n- note_url (String): Optional. A URL to remind you what app the OAuth token is for.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:160"
        },
        {
            "message": "Missing item type\nauthorization#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/authorization.js:210"
        },
        {
            "message": "Missing item type\nmixin events\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:1"
        },
        {
            "message": "Missing item type\nevents#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:22"
        },
        {
            "message": "Missing item type\nevents#getFromRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:68"
        },
        {
            "message": "Missing item type\nevents#getFromRepoIssues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:116"
        },
        {
            "message": "Missing item type\nevents#getFromRepoNetwork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:164"
        },
        {
            "message": "Missing item type\nevents#getFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:212"
        },
        {
            "message": "Missing item type\nevents#getReceived(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:259"
        },
        {
            "message": "Missing item type\nevents#getReceivedPublic(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:306"
        },
        {
            "message": "Missing item type\nevents#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:353"
        },
        {
            "message": "Missing item type\nevents#getFromUserPublic(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:400"
        },
        {
            "message": "Missing item type\nevents#getFromUserOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/events.js:447"
        },
        {
            "message": "Missing item type\nmixin gists\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:1"
        },
        {
            "message": "Missing item type\ngists#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:22"
        },
        {
            "message": "Missing item type\ngists#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:69"
        },
        {
            "message": "Missing item type\ngists#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- description (String): Optional. \n- public (Boolean): Required. \n- files (Json): Required. Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:117"
        },
        {
            "message": "Missing item type\ngists#edit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- description (String): Optional. \n- files (Json): Required. Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:164"
        },
        {
            "message": "Missing item type\ngists#public(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:211"
        },
        {
            "message": "Missing item type\ngists#starred(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:256"
        },
        {
            "message": "Missing item type\ngists#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:301"
        },
        {
            "message": "Missing item type\ngists#star(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:346"
        },
        {
            "message": "Missing item type\ngists#deleteStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:391"
        },
        {
            "message": "Missing item type\ngists#checkStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:436"
        },
        {
            "message": "Missing item type\ngists#fork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:481"
        },
        {
            "message": "Missing item type\ngists#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:526"
        },
        {
            "message": "Missing item type\ngists#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:571"
        },
        {
            "message": "Missing item type\ngists#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:616"
        },
        {
            "message": "Missing item type\ngists#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:662"
        },
        {
            "message": "Missing item type\ngists#editComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required. \n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:708"
        },
        {
            "message": "Missing item type\ngists#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- gist_id (String): Required. Id (SHA1 hash) of the gist.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gists.js:755"
        },
        {
            "message": "Missing item type\nmixin gitdata\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:1"
        },
        {
            "message": "Missing item type\ngitdata#getBlob(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:22"
        },
        {
            "message": "Missing item type\ngitdata#createBlob(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- content (String): Required. \n- encoding (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:71"
        },
        {
            "message": "Missing item type\ngitdata#getCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:119"
        },
        {
            "message": "Missing item type\ngitdata#createCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- message (String): Required. String of the commit message\n- tree (String): Required. String of the SHA of the tree object this commit points to\n- parents (Array): Required. Array of the SHAs of the commits that were the parents of this commit. If omitted or empty, the commit will be written as a root commit. For a single parent, an array of one SHA should be provided, for a merge commit, an array of more than one should be provided.\n- author (Json): Optional. \n- committer (Json): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:166"
        },
        {
            "message": "Missing item type\ngitdata#getReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:217"
        },
        {
            "message": "Missing item type\ngitdata#getAllReferences(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:264"
        },
        {
            "message": "Missing item type\ngitdata#createReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:312"
        },
        {
            "message": "Missing item type\ngitdata#updateReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- sha (String): Required. \n- force (Boolean): Optional. Boolean indicating whether to force the update or to make sure the update is a fast-forward update. The default is false, so leaving this out or setting it to false will make sure you’re not overwriting work.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:360"
        },
        {
            "message": "Missing item type\ngitdata#deleteReference(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Required. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:409"
        },
        {
            "message": "Missing item type\ngitdata#getTag(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:456"
        },
        {
            "message": "Missing item type\ngitdata#createTag(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- tag (String): Required. String of the tag\n- message (String): Required. String of the tag message\n- object (String): Required. String of the SHA of the git object this is tagging\n- type (String): Required. String of the type of the object we’re tagging. Normally this is a commit but it can also be a tree or a blob.\n- tagger (Json): Required. JSON object that contains the following keys: `name` - String of the name of the author of the tag, `email` - String of the email of the author of the tag, `date` - Timestamp of when this object was tagged",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:503"
        },
        {
            "message": "Missing item type\ngitdata#getTree(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- recursive (Boolean): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:554"
        },
        {
            "message": "Missing item type\ngitdata#createTree(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- tree (Json): Required. Array of Hash objects (of path, mode, type and sha) specifying a tree structure\n- base_tree (String): Optional. String of the SHA1 of the tree you want to update with new data",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitdata.js:602"
        },
        {
            "message": "Missing item type\nmixin gitignore\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js:1"
        },
        {
            "message": "Missing item type\ngitignore#templates(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js:22"
        },
        {
            "message": "Missing item type\ngitignore#template(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Required. The name of the .gitignore template to get",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/gitignore.js:67"
        },
        {
            "message": "Missing item type\nclass Github\n\nA Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/index.js:1"
        },
        {
            "message": "Missing item type\nmixin issues\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1"
        },
        {
            "message": "Missing item type\nissues#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- filter (String): Optional.  Validation rule: ` ^(all|assigned|created|mentioned|subscribed)$ `.\n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- labels (String): Optional. String list of comma separated Label names. Example: bug,ui,@high\n- sort (String): Optional.  Validation rule: ` ^(created|updated|comments)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:22"
        },
        {
            "message": "Missing item type\nissues#repoIssues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- milestone (String): Optional.  Validation rule: ` ^([0-9]+|none|\\*)$ `.\n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- assignee (String): Optional. String User login, `none` for Issues with no assigned User. `*` for Issues with any assigned User.\n- creator (String): Optional. The user that created the issue.\n- mentioned (String): Optional. String User login.\n- labels (String): Optional. String list of comma separated Label names. Example: bug,ui,@high\n- sort (String): Optional.  Validation rule: ` ^(created|updated|comments)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:74"
        },
        {
            "message": "Missing item type\nissues#getRepoIssue(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:131"
        },
        {
            "message": "Missing item type\nissues#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- body (String): Optional. \n- assignee (String): Optional. Login for the user that this issue should be assigned to.\n- milestone (Number): Optional. Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.\n- labels (Json): Optional. Array of strings - Labels to associate with this issue.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:178"
        },
        {
            "message": "Missing item type\nissues#edit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- title (String): Optional. \n- body (String): Optional. \n- assignee (String): Optional. Login for the user that this issue should be assigned to.\n- milestone (Number): Optional. Milestone to associate this issue with. Validation rule: ` ^[0-9]+$ `.\n- labels (Json): Optional. Array of strings - Labels to associate with this issue.\n- state (String): Optional. open or closed Validation rule: ` ^(open|closed)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:229"
        },
        {
            "message": "Missing item type\nissues#repoComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sort (String): Optional.  Validation rule: ` ^(created|updated)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:282"
        },
        {
            "message": "Missing item type\nissues#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:333"
        },
        {
            "message": "Missing item type\nissues#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:382"
        },
        {
            "message": "Missing item type\nissues#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:429"
        },
        {
            "message": "Missing item type\nissues#editComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:477"
        },
        {
            "message": "Missing item type\nissues#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:525"
        },
        {
            "message": "Missing item type\nissues#getEvents(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:572"
        },
        {
            "message": "Missing item type\nissues#getRepoEvents(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:621"
        },
        {
            "message": "Missing item type\nissues#getEvent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:669"
        },
        {
            "message": "Missing item type\nissues#getLabels(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:716"
        },
        {
            "message": "Missing item type\nissues#getLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:764"
        },
        {
            "message": "Missing item type\nissues#createLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- color (String): Required. 6 character hex code, without a leading #.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:811"
        },
        {
            "message": "Missing item type\nissues#updateLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- color (String): Required. 6 character hex code, without a leading #.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:859"
        },
        {
            "message": "Missing item type\nissues#deleteLabel(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:907"
        },
        {
            "message": "Missing item type\nissues#getIssueLabels(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:954"
        },
        {
            "message": "Missing item type\nissues#getAllMilestones(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- sort (String): Optional. due_date, completeness, default: due_date Validation rule: ` ^(due_date|completeness)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1001"
        },
        {
            "message": "Missing item type\nissues#getMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1051"
        },
        {
            "message": "Missing item type\nissues#createMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- description (String): Optional. \n- due_on (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1098"
        },
        {
            "message": "Missing item type\nissues#updateMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- title (String): Required. \n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- description (String): Optional. \n- due_on (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1148"
        },
        {
            "message": "Missing item type\nissues#deleteMilestone(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/issues.js:1199"
        },
        {
            "message": "Missing item type\nmixin markdown\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js:1"
        },
        {
            "message": "Missing item type\nmarkdown#render(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- text (String): Required. The Markdown text to render\n- mode (String): Optional. The rendering mode, `markdown` to render a document as plain Markdown, just like README files are rendered. `gfm` to render a document as user-content, e.g. like user comments or issues are rendered. In GFM mode, hard line breaks are always taken into account, and issue and user mentions are linked accordingly. Validation rule: ` ^(markdown|gfm)$ `.\n- context (String): Optional. The repository context, only taken into account when rendering as `gfm`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js:22"
        },
        {
            "message": "Missing item type\nmarkdown#renderRaw(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- data (String): Required. Raw data to send as the body of the request",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/markdown.js:69"
        },
        {
            "message": "Missing item type\nmixin misc\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js:1"
        },
        {
            "message": "Missing item type\nmisc#emojis(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js:22"
        },
        {
            "message": "Missing item type\nmisc#meta(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js:67"
        },
        {
            "message": "Missing item type\nmisc#rateLimit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/misc.js:112"
        },
        {
            "message": "Missing item type\nmixin orgs\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:1"
        },
        {
            "message": "Missing item type\norgs#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:22"
        },
        {
            "message": "Missing item type\norgs#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:69"
        },
        {
            "message": "Missing item type\norgs#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- billing_email (String): Optional. Billing email address. This address is not publicized.\n- company (String): Optional. \n- email (String): Optional. Publicly visible email address.\n- location (String): Optional. \n- name (String): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:116"
        },
        {
            "message": "Missing item type\norgs#getMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- filter (String): Optional.  Validation rule: ` ^(all|2fa_disabled)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:166"
        },
        {
            "message": "Missing item type\norgs#getMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:214"
        },
        {
            "message": "Missing item type\norgs#removeMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:260"
        },
        {
            "message": "Missing item type\norgs#getPublicMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:306"
        },
        {
            "message": "Missing item type\norgs#getPublicMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:351"
        },
        {
            "message": "Missing item type\norgs#publicizeMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:397"
        },
        {
            "message": "Missing item type\norgs#concealMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:443"
        },
        {
            "message": "Missing item type\norgs#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:489"
        },
        {
            "message": "Missing item type\norgs#getTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:536"
        },
        {
            "message": "Missing item type\norgs#createTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- name (String): Required. \n- repo_names (Array): Optional. Array of strings\n- permission (String): Optional. `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:581"
        },
        {
            "message": "Missing item type\norgs#updateTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- name (String): Required. \n- permission (String): Optional. `pull` - team members can pull, but not push or administer this repositories (Default), `push` - team members can pull and push, but not administer this repositores, `admin` - team members can pull, push and administer these repositories. Validation rule: ` ^(pull|push|admin)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:629"
        },
        {
            "message": "Missing item type\norgs#deleteTeam(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:676"
        },
        {
            "message": "Missing item type\norgs#getTeamMembers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:721"
        },
        {
            "message": "Missing item type\norgs#getTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:768"
        },
        {
            "message": "Missing item type\norgs#addTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:814"
        },
        {
            "message": "Missing item type\norgs#deleteTeamMember(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:860"
        },
        {
            "message": "Missing item type\norgs#addTeamMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:906"
        },
        {
            "message": "Missing item type\norgs#getTeamRepos(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:952"
        },
        {
            "message": "Missing item type\norgs#getTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:999"
        },
        {
            "message": "Missing item type\norgs#addTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:1046"
        },
        {
            "message": "Missing item type\norgs#deleteTeamRepo(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/orgs.js:1093"
        },
        {
            "message": "Missing item type\nmixin pullRequests\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:1"
        },
        {
            "message": "Missing item type\npullRequests#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- state (String): Optional. open, closed, or all Validation rule: ` ^(open|closed|all)$ `.\n- head (String): Optional. \n- base (String): Optional. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- sort (String): Optional. Possible values are: `created`, `updated`, `popularity`, `long-running`, Default: `created` Validation rule: ` ^(created|updated|popularity|long-running)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:22"
        },
        {
            "message": "Missing item type\npullRequests#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:75"
        },
        {
            "message": "Missing item type\npullRequests#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- body (String): Optional. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:122"
        },
        {
            "message": "Missing item type\npullRequests#createFromIssue(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- issue (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:172"
        },
        {
            "message": "Missing item type\npullRequests#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- state (String): Optional.  Validation rule: ` ^(open|closed)$ `.\n- title (String): Required. \n- body (String): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:221"
        },
        {
            "message": "Missing item type\npullRequests#getCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:271"
        },
        {
            "message": "Missing item type\npullRequests#getFiles(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:320"
        },
        {
            "message": "Missing item type\npullRequests#getMerged(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:369"
        },
        {
            "message": "Missing item type\npullRequests#merge(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- commit_message (String): Optional. The message that will be used for the merge commit",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:418"
        },
        {
            "message": "Missing item type\npullRequests#getComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:466"
        },
        {
            "message": "Missing item type\npullRequests#getComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:515"
        },
        {
            "message": "Missing item type\npullRequests#createComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required. \n- commit_id (String): Required. Sha of the commit to comment on.\n- path (String): Required. Relative path of the file to comment on.\n- position (Number): Required. Column index in the diff to comment on.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:562"
        },
        {
            "message": "Missing item type\npullRequests#createCommentReply(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required. \n- in_reply_to (Number): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:613"
        },
        {
            "message": "Missing item type\npullRequests#updateComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.\n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:662"
        },
        {
            "message": "Missing item type\npullRequests#deleteComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- number (Number): Required.  Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/pullRequests.js:710"
        },
        {
            "message": "Missing item type\nmixin releases\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:1"
        },
        {
            "message": "Missing item type\nreleases#listReleases(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:22"
        },
        {
            "message": "Missing item type\nreleases#getRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:70"
        },
        {
            "message": "Missing item type\nreleases#createRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- repo (String): Required. \n- tag_name (String): Required. String of the tag\n- target_commitish (String): Optional. Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).\n- name (String): Optional. \n- body (String): Optional. \n- draft (Boolean): Optional. true to create a draft (unpublished) release, false to create a published one. Default: false\n- prerelease (Boolean): Optional. true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:117"
        },
        {
            "message": "Missing item type\nreleases#editRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- tag_name (String): Required. String of the tag\n- target_commitish (String): Optional. Specifies the commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Unused if the Git tag already exists. Default: the repository's default branch (usually master).\n- name (String): Optional. \n- body (String): Optional. \n- draft (Boolean): Optional. true to create a draft (unpublished) release, false to create a published one. Default: false\n- prerelease (Boolean): Optional. true to identify the release as a prerelease. false to identify the release as a full release. Default: false",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:169"
        },
        {
            "message": "Missing item type\nreleases#deleteRelease(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:222"
        },
        {
            "message": "Missing item type\nreleases#listAssets(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:269"
        },
        {
            "message": "Missing item type\nreleases#getAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:316"
        },
        {
            "message": "Missing item type\nreleases#uploadAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- name (String): Required. the file name of the asset",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:363"
        },
        {
            "message": "Missing item type\nreleases#editAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required. \n- name (String): Required. \n- label (String): Optional. An alternate short description of the asset. Used in place of the filename.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:411"
        },
        {
            "message": "Missing item type\nreleases#deleteAsset(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- owner (String): Required. \n- id (Number): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/releases.js:460"
        },
        {
            "message": "Missing item type\nmixin repos\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1"
        },
        {
            "message": "Missing item type\nrepos#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- type (String): Optional. Possible values: `all`, `owner`, `public`, `private`, `member`. Default: `all`. Validation rule: ` ^(all|owner|public|private|member)$ `.\n- sort (String): Optional. Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:22"
        },
        {
            "message": "Missing item type\nrepos#getFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- type (String): Optional. Possible values: `all`, `owner`, `member`. Default: `public`. Validation rule: ` ^(all|owner|member)$ `.\n- sort (String): Optional. Possible values: `created`, `updated`, `pushed`, `full_name`. Default: `full_name`. Validation rule: ` ^(created|updated|pushed|full_name)$ `.\n- direction (String): Optional.  Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:71"
        },
        {
            "message": "Missing item type\nrepos#getFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- type (String): Optional. Possible values: `all`, `public`, `member`. Default: `all`. Validation rule: ` ^(all|public|member)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:121"
        },
        {
            "message": "Missing item type\nrepos#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- auto_init (Boolean): Optional. True to create an initial commit with empty README. Default is false\n- gitignore_template (String): Optional. Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:169"
        },
        {
            "message": "Missing item type\nrepos#createFromOrg(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- auto_init (Boolean): Optional. True to create an initial commit with empty README. Default is false\n- gitignore_template (String): Optional. Desired language or platform .gitignore template to apply. Ignored if auto_init parameter is not provided.\n- team_id (Number): Optional. The id of the team that will be granted access to this repository. This is only valid when creating a repo in an organization. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:222"
        },
        {
            "message": "Missing item type\nrepos#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:277"
        },
        {
            "message": "Missing item type\nrepos#one(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:323"
        },
        {
            "message": "Missing item type\nrepos#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- description (String): Optional. \n- homepage (String): Optional. \n- private (Boolean): Optional. True to create a private repository, false to create a public one. Creating private repositories requires a paid GitHub account. Default is false.\n- has_issues (Boolean): Optional. True to enable issues for this repository, false to disable them. Default is true.\n- has_wiki (Boolean): Optional. True to enable the wiki for this repository, false to disable it. Default is true.\n- has_downloads (Boolean): Optional. True to enable downloads for this repository, false to disable them. Default is true.\n- default_branch (String): Optional. Updates the default branch for this repository.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:368"
        },
        {
            "message": "Missing item type\nrepos#delete(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:422"
        },
        {
            "message": "Missing item type\nrepos#merge(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.\n- commit_message (String): Optional. Commit message to use for the merge commit. If omitted, a default message will be used.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:468"
        },
        {
            "message": "Missing item type\nrepos#getContributors(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- anon (Boolean): Optional. Set to 1 or true to include anonymous contributors in results.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:517"
        },
        {
            "message": "Missing item type\nrepos#getLanguages(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:566"
        },
        {
            "message": "Missing item type\nrepos#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:614"
        },
        {
            "message": "Missing item type\nrepos#getTags(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:662"
        },
        {
            "message": "Missing item type\nrepos#getBranches(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:710"
        },
        {
            "message": "Missing item type\nrepos#getBranch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- branch (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:758"
        },
        {
            "message": "Missing item type\nrepos#getCollaborators(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:807"
        },
        {
            "message": "Missing item type\nrepos#getCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:855"
        },
        {
            "message": "Missing item type\nrepos#addCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:902"
        },
        {
            "message": "Missing item type\nrepos#removeCollaborator(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- collabuser (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:949"
        },
        {
            "message": "Missing item type\nrepos#getCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Optional. Sha or branch to start listing commits from.\n- path (String): Optional. Only commits containing this file path will be returned.\n- author (String): Optional. GitHub login or email address by which to filter by commit author.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.\n- since (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ\n- until (Date): Optional. Timestamp in ISO 8601 format: YYYY-MM-DDTHH:MM:SSZ",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:996"
        },
        {
            "message": "Missing item type\nrepos#getCommit(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1049"
        },
        {
            "message": "Missing item type\nrepos#getAllCommitComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1096"
        },
        {
            "message": "Missing item type\nrepos#getCommitComments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1144"
        },
        {
            "message": "Missing item type\nrepos#createCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- body (String): Required. \n- commit_id (String): Required. Sha of the commit to comment on.\n- path (String): Optional. Relative path of the file to comment on.\n- position (Number): Optional. Line index in the diff to comment on.\n- line (Number): Optional. Line number in the file to comment on. Defaults to 1.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1193"
        },
        {
            "message": "Missing item type\nrepos#getCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1245"
        },
        {
            "message": "Missing item type\nrepos#updateCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- body (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1292"
        },
        {
            "message": "Missing item type\nrepos#compareCommits(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- base (String): Required. The branch (or git ref) you want your changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repo that requests a merge to a base of another repo.\n- head (String): Required. The branch (or git ref) where your changes are implemented.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1340"
        },
        {
            "message": "Missing item type\nrepos#deleteCommitComment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1388"
        },
        {
            "message": "Missing item type\nrepos#getReadme(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1435"
        },
        {
            "message": "Missing item type\nrepos#getContent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Optional. The content path.\n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1482"
        },
        {
            "message": "Missing item type\nrepos#createContent(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- content (String): Optional. \n- message (String): Optional. \n- path (String): Optional. The content path.\n- ref (String): Optional. The String name of the Commit/Branch/Tag. Defaults to master.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1530"
        },
        {
            "message": "Missing item type\nrepos#createFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- content (String): Required. The new file content, Base64 encoded.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1580"
        },
        {
            "message": "Missing item type\nrepos#updateFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- content (String): Required. The updated file content, Base64 encoded.\n- sha (String): Required. The blob SHA of the file being replaced.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1632"
        },
        {
            "message": "Missing item type\nrepos#deleteFile(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- path (String): Required. The content path.\n- message (String): Required. The commit message.\n- sha (String): Required. The blob SHA of the file being removed.\n- branch (String): Optional. The branch name. If not provided, uses the repository’s default branch (usually master).\n- author (Json): Optional. \n- committer (Json): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1685"
        },
        {
            "message": "Missing item type\nrepos#getArchiveLink(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- ref (String): Optional. String of the name of the fully qualified reference (ie: heads/master). If it doesn’t have at least one slash, it will be rejected.\n- archive_format (String): Required. Either tarball or zipball Validation rule: ` ^(tarball|zipball)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1737"
        },
        {
            "message": "Missing item type\nrepos#getDownloads(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1785"
        },
        {
            "message": "Missing item type\nrepos#getDownload(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1833"
        },
        {
            "message": "Missing item type\nrepos#deleteDownload(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1880"
        },
        {
            "message": "Missing item type\nrepos#getForks(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sort (String): Optional. Possible values: `newest`, `oldest`, `watchers`, default: `newest`. Validation rule: ` ^(newest|oldest|watchers)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1927"
        },
        {
            "message": "Missing item type\nrepos#fork(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- organization (String): Optional. Organization login. The repository will be forked into this organization.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:1976"
        },
        {
            "message": "Missing item type\nrepos#getKeys(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2023"
        },
        {
            "message": "Missing item type\nrepos#getKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2071"
        },
        {
            "message": "Missing item type\nrepos#createKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2118"
        },
        {
            "message": "Missing item type\nrepos#updateKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2166"
        },
        {
            "message": "Missing item type\nrepos#deleteKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2215"
        },
        {
            "message": "Missing item type\nrepos#getStargazers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2262"
        },
        {
            "message": "Missing item type\nrepos#getStarred(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2310"
        },
        {
            "message": "Missing item type\nrepos#getStarredFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2356"
        },
        {
            "message": "Missing item type\nrepos#getStarring(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2403"
        },
        {
            "message": "Missing item type\nrepos#star(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2451"
        },
        {
            "message": "Missing item type\nrepos#unStar(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2497"
        },
        {
            "message": "Missing item type\nrepos#getWatchers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2543"
        },
        {
            "message": "Missing item type\nrepos#getWatched(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2591"
        },
        {
            "message": "Missing item type\nrepos#getWatchedFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2637"
        },
        {
            "message": "Missing item type\nrepos#getWatching(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2684"
        },
        {
            "message": "Missing item type\nrepos#watch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2732"
        },
        {
            "message": "Missing item type\nrepos#unWatch(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2778"
        },
        {
            "message": "Missing item type\nrepos#getHooks(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2824"
        },
        {
            "message": "Missing item type\nrepos#getHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2872"
        },
        {
            "message": "Missing item type\nrepos#createHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- name (String): Required. \n- config (Json): Required. A Hash containing key/value pairs to provide settings for this hook. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.\n- events (Array): Optional. Determines what events the hook is triggered for. Default: `['push']`.\n- active (Boolean): Optional. Determines whether the hook is actually triggered on pushes.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2919"
        },
        {
            "message": "Missing item type\nrepos#updateHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required. \n- name (String): Required. \n- config (Json): Required. A Hash containing key/value pairs to provide settings for this hook. Modifying this will replace the entire config object. These settings vary between the services and are defined in the github-services repo. Booleans are stored internally as `1` for true, and `0` for false. Any JSON true/false values will be converted automatically.\n- events (Array): Optional. Determines what events the hook is triggered for. This replaces the entire array of events. Default: `['push']`.\n- add_events (Array): Optional. Determines a list of events to be added to the list of events that the Hook triggers for.\n- remove_events (Array): Optional. Determines a list of events to be removed from the list of events that the Hook triggers for.\n- active (Boolean): Optional. Determines whether the hook is actually triggered on pushes.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:2969"
        },
        {
            "message": "Missing item type\nrepos#testHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3022"
        },
        {
            "message": "Missing item type\nrepos#deleteHook(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3069"
        },
        {
            "message": "Missing item type\nrepos#getStatsContributors(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3116"
        },
        {
            "message": "Missing item type\nrepos#getStatsCommitActivity(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3162"
        },
        {
            "message": "Missing item type\nrepos#getStatsCodeFrequency(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3208"
        },
        {
            "message": "Missing item type\nrepos#getStatsParticipation(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3254"
        },
        {
            "message": "Missing item type\nrepos#getStatsPunchCard(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3300"
        },
        {
            "message": "Missing item type\nrepos#getDeployments(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- sha (String): Optional. The short or long sha that was recorded at creation time. Default: none.\n- ref (String): Optional. The name of the ref. This can be a branch, tag, or sha. Default: none.\n- task (String): Optional. The name of the task for the deployment. e.g. deploy or deploy:migrations. Default: none.\n- environment (String): Optional. The name of the environment that was deployed to. e.g. staging or production. Default: none.\n- user (String): Required. \n- repo (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3346"
        },
        {
            "message": "Missing item type\nrepos#createDeployment(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- ref (String): Required. The ref to deploy. This can be a branch, tag, or sha.\n- task (String): Required. The named task to execute. e.g. deploy or deploy:migrations. Default: deploy\n- auto_merge (Boolean): Optional. Optional parameter to merge the default branch into the requested ref if it is behind the default branch. Default: true\n- required_contexts (Array): Optional. Optional array of status contexts verified against commit status checks. If this parameter is omitted from the parameters then all unique contexts will be verified before a deployment is created. To bypass checking entirely pass an empty array. Defaults to all unique contexts.\n- payload (String): Optional. Optional JSON payload with extra information about the deployment. Default: ''\n- environment (String): Optional. The name of the environment that was deployed to. e.g. staging or production. Default: none.\n- description (String): Optional. Optional short description. Default: ''\n- user (String): Required. \n- repo (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3398"
        },
        {
            "message": "Missing item type\nrepos#getDeploymentStatuses(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3451"
        },
        {
            "message": "Missing item type\nrepos#createDeploymentStatus(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- state (String): Optional. The state of the status. Can be one of pending, success, error, or failure.\n- target_url (String): Optional. The target URL to associate with this status. This URL should contain output to keep the user updated while the task is running or serve as historical information for what happened in the deployment. Default: ''\n- description (String): Optional. A short description of the status. Default: ''\n- user (String): Required. \n- repo (String): Required. \n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/repos.js:3498"
        },
        {
            "message": "Missing item type\nmixin search\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:1"
        },
        {
            "message": "Missing item type\nsearch#code(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. indexed only Validation rule: ` ^indexed$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:22"
        },
        {
            "message": "Missing item type\nsearch#issues(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. comments, created, or updated Validation rule: ` ^(comments|created|updated)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:71"
        },
        {
            "message": "Missing item type\nsearch#repos(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. stars, forks, or updated Validation rule: ` ^(stars|forks|updated)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:120"
        },
        {
            "message": "Missing item type\nsearch#users(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- q (String): Required. Search Term\n- sort (String): Optional. followers, repositories, or joined Validation rule: ` ^(followers|repositories|joined)$ `.\n- order (String): Optional. asc or desc Validation rule: ` ^(asc|desc)$ `.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:169"
        },
        {
            "message": "Missing item type\nsearch#email(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- email (String): Required. Email address",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/search.js:218"
        },
        {
            "message": "Missing item type\nmixin statuses\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js:1"
        },
        {
            "message": "Missing item type\nstatuses#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js:22"
        },
        {
            "message": "Missing item type\nstatuses#getCombined(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js:69"
        },
        {
            "message": "Missing item type\nstatuses#create(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- repo (String): Required. \n- sha (String): Required. \n- state (String): Required. State of the status - can be one of pending, success, error, or failure. Validation rule: ` ^(pending|success|error|failure)$ `.\n- target_url (String): Optional. Target url to associate with this status. This URL will be linked from the GitHub UI to allow users to easily see the ‘source’ of the Status.\n- description (String): Optional. Short description of the status.\n- context (String): Optional. A string label to differentiate this status from the status of other systems.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/statuses.js:116"
        },
        {
            "message": "Missing item type\nmixin user\n\nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <info@mikedeboer.nl>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:1"
        },
        {
            "message": "Missing item type\nuser#getAll(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- since (Number): Optional. The integer ID of the last User that you’ve seen.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:22"
        },
        {
            "message": "Missing item type\nuser#getFrom(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:67"
        },
        {
            "message": "Missing item type\nuser#get(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:112"
        },
        {
            "message": "Missing item type\nuser#update(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- name (String): Optional. \n- email (String): Optional. \n- blog (String): Optional. \n- company (String): Optional. \n- location (String): Optional. \n- hireable (Boolean): Optional. \n- bio (String): Optional.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:157"
        },
        {
            "message": "Missing item type\nuser#getOrgs(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:208"
        },
        {
            "message": "Missing item type\nuser#editOrganizationMembership(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- org (String): Required. \n- state (String): Required.  Validation rule: ` ^(open|closed|active)$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:254"
        },
        {
            "message": "Missing item type\nuser#getTeams(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:300"
        },
        {
            "message": "Missing item type\nuser#getEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:346"
        },
        {
            "message": "Missing item type\nuser#addEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:392"
        },
        {
            "message": "Missing item type\nuser#deleteEmails(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\nNo other params, simply pass an empty Object literal `{}`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:437"
        },
        {
            "message": "Missing item type\nuser#getFollowers(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:482"
        },
        {
            "message": "Missing item type\nuser#getFollowingFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:529"
        },
        {
            "message": "Missing item type\nuser#getFollowing(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:576"
        },
        {
            "message": "Missing item type\nuser#getFollowUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:622"
        },
        {
            "message": "Missing item type\nuser#followUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:669"
        },
        {
            "message": "Missing item type\nuser#unFollowUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:714"
        },
        {
            "message": "Missing item type\nuser#getKeys(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:759"
        },
        {
            "message": "Missing item type\nuser#getKeysFromUser(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- user (String): Required. \n- page (Number): Optional. Page number of the results to fetch. Validation rule: ` ^[0-9]+$ `.\n- per_page (Number): Optional. A custom page size up to 100. Default is 30. Validation rule: ` ^[0-9]+$ `.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:805"
        },
        {
            "message": "Missing item type\nuser#getKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:852"
        },
        {
            "message": "Missing item type\nuser#createKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- title (String): Required. \n- key (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:897"
        },
        {
            "message": "Missing item type\nuser#updateKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required. \n- title (String): Required. \n- key (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:943"
        },
        {
            "message": "Missing item type\nuser#deleteKey(msg, callback) -> null\n    - msg (Object): Object that contains the parameters and their values to be sent to the server.\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\n##### Params on the `msg` object:\n\n- headers (Object): Optional. Key/ value pair of request headers to pass along with the HTTP request. Valid headers are: 'If-Modified-Since', 'If-None-Match', 'Cookie', 'User-Agent', 'Accept', 'X-GitHub-OTP'.\n- id (String): Required.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/api/v3.0.0/user.js:990"
        },
        {
            "message": "Missing item type\nExample\n \nGithub API usage example.\n \nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <mike@c9.io>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/example.js:1"
        },
        {
            "message": "Missing item type\nOAuth\n \nOAuth usage example.\n \nCopyright 2012 Cloud9 IDE, Inc.\n\nThis product includes software developed by\nCloud9 IDE, Inc (http://c9.io).\n\nAuthor: Mike de Boer <mike@c9.io>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/test/oauth.js:1"
        },
        {
            "message": "Missing item type\nclass HttpError\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js:1"
        },
        {
            "message": "Missing item type\nHttpError#toString() -> String\n \nReturns the stringified version of the error (i.e. the message).",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js:23"
        },
        {
            "message": "Missing item type\nHttpError#toJSON() -> Object\n \nReturns a JSON object representation of the error.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/error.js:32"
        },
        {
            "message": "Missing item type\nclass ApiGenerator\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/generate.js:2"
        },
        {
            "message": "Missing item type\nclass Client\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>\n\n [[Client]] can load any version of the [[github]] client API, with the\n requirement that a valid routes.json definition file is present in the\n `api/[VERSION]` directory and that the routes found in this file are\n implemented as well.\n\n Upon instantiation of the [[Client]] class, the routes.json file is loaded\n from the API version specified in the configuration and, parsed and from it\n the routes for HTTP requests are extracted. For each HTTP endpoint to the\n HTTP server, a method is generated which accepts a Javascript Object\n with parameters and an optional callback to be invoked when the API request\n returns from the server or when the parameters could not be validated.\n\n When an HTTP endpoint is processed and a method is generated as described\n above, [[Client]] also sets up parameter validation with the rules as\n defined in the routes.json. A full example that illustrates how this works\n is shown below:\n\n ##### Example\n\n First, we look at a listing of a sample routes.json routes definition file:\n\n     {\n         \"defines\": {\n             \"constants\": {\n                 \"name\": \"Github\",\n                 \"description\": \"A Node.JS module, which provides an object oriented wrapper for the GitHub v3 API.\",\n                 \"protocol\": \"https\",\n                 \"host\": \"api.github.com\",\n                 \"port\": 443,\n                 \"dateFormat\": \"YYYY-MM-DDTHH:MM:SSZ\",\n                 \"requestFormat\": \"json\"\n             },\n             \"response-headers\": [\n                 \"X-RateLimit-Limit\",\n                 \"X-RateLimit-Remaining\",\n                 \"Link\"\n             ],\n             \"params\": {\n                 \"files\": {\n                     \"type\": \"Json\",\n                     \"required\": true,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"Files that make up this gist. The key of which should be a required string filename and the value another required hash with parameters: 'content'\"\n                 },\n                 \"user\": {\n                     \"type\": \"String\",\n                     \"required\": true,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"\"\n                 },\n                 \"description\": {\n                     \"type\": \"String\",\n                     \"required\": false,\n                     \"validation\": \"\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"\"\n                 },\n                 \"page\": {\n                     \"type\": \"Number\",\n                     \"required\": false,\n                     \"validation\": \"^[0-9]+$\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"Page number of the results to fetch.\"\n                 },\n                 \"per_page\": {\n                     \"type\": \"Number\",\n                     \"required\": false,\n                     \"validation\": \"^[0-9]+$\",\n                     \"invalidmsg\": \"\",\n                     \"description\": \"A custom page size up to 100. Default is 30.\"\n                 }\n             }\n         },\n\n         \"gists\": {\n             \"get-from-user\": {\n                 \"url\": \":user/gists\",\n                 \"method\": \"GET\",\n                 \"params\": {\n                     \"$user\": null,\n                     \"$page\": null,\n                     \"$per_page\": null\n                 }\n             },\n\n             \"create\": {\n                 \"url\": \"/gists\",\n                 \"method\": \"POST\",\n                 \"params\": {\n                     \"$description\": null,\n                     \"public\": {\n                         \"type\": \"Boolean\",\n                         \"required\": true,\n                         \"validation\": \"\",\n                         \"invalidmsg\": \"\",\n                         \"description\": \"\"\n                     },\n                     \"$files\": null\n                 }\n             }\n         }\n      }\n\n You probably noticed that the definition is quite verbose and the decision\n for its design was made to be verbose whilst still allowing for basic variable\n definitions and substitions for request parameters.\n\n There are two sections; 'defines' and 'gists' in this example.\n\n The `defines` section contains a list of `constants` that will be used by the\n [[Client]] to make requests to the right URL that hosts the API.\n The `gists` section defines the endpoints for calls to the API server, for\n gists specifically in this example, but the other API sections are defined in\n the exact same way.\n These definitions are parsed and methods are created that the client can call\n to make an HTTP request to the server.\n there is one endpoint defined: .\n In this example, the endpoint `gists/get-from-user` will be exposed as a member\n on the [[Client]] object and may be invoked with\n\n     client.getFromUser({\n         \"user\": \"bob\"\n     }, function(err, ret) {\n         // do something with the result here.\n     });\n\n     // or to fetch a specfic page:\n     client.getFromUser({\n         \"user\": \"bob\",\n         \"page\": 2,\n         \"per_page\": 100\n     }, function(err, ret) {\n         // do something with the result here.\n     });\n\n All the parameters as specified in the Object that is passed to the function\n as first argument, will be validated according to the rules in the `params`\n block of the route definition.\n Thus, in the case of the `user` parameter, according to the definition in\n the `params` block, it's a variable that first needs to be looked up in the\n `params` block of the `defines` section (at the top of the JSON file). Params\n that start with a `$` sign will be substituted with the param with the same\n name from the `defines/params` section.\n There we see that it is a required parameter (needs to hold a value). In other\n words, if the validation requirements are not met, an HTTP error is passed as\n first argument of the callback.\n\n Implementation Notes: the `method` is NOT case sensitive, whereas `url` is.\n The `url` parameter also supports denoting parameters inside it as follows:\n\n     \"get-from-user\": {\n         \"url\": \":user/gists\",\n         \"method\": \"GET\"\n         ...\n     }",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:9"
        },
        {
            "message": "Missing item type\nClient#setupRoutes() -> null\n\nConfigures the routes as defined in a routes.json file of an API version\n\n[[Client#setupRoutes]] is invoked by the constructor, takes the\ncontents of the JSON document that contains the definitions of all the\navailable API routes and iterates over them.\n\nIt first recurses through each definition block until it reaches an API\nendpoint. It knows that an endpoint is found when the `url` and `param`\ndefinitions are found as a direct member of a definition block.\nThen the availability of an implementation by the API is checked; if it's\nnot present, this means that a portion of the API as defined in the routes.json\nfile is not implemented properly, thus an exception is thrown.\nAfter this check, a method is attached to the [[Client]] instance\nand becomes available for use. Inside this method, the parameter validation\nand typecasting is done, according to the definition of the parameters in\nthe `params` block, upon invocation.\n\nThis mechanism ensures that the handlers ALWAYS receive normalized data\nthat is of the correct format and type. JSON parameters are parsed, Strings\nare trimmed, Numbers and Floats are casted and checked for NaN after that.\n\nNote: Query escaping for usage with SQL products is something that can be\nimplemented additionally by adding an additional parameter type.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:197"
        },
        {
            "message": "Missing item type\nClient#authenticate(options) -> null\n    - options (Object): Object containing the authentication type and credentials\n        - type (String): One of the following: `basic` or `oauth`\n        - username (String): Github username\n        - password (String): Password to your account\n        - token (String): OAuth2 token\n\nSet an authentication method to have access to protected resources.\n\n##### Example\n\n    // basic\n    github.authenticate({\n        type: \"basic\",\n        username: \"mikedeboertest\",\n        password: \"test1324\"\n    });\n\n    // or oauth\n    github.authenticate({\n        type: \"oauth\",\n        token: \"e5a4a27487c26e571892846366de023349321a73\"\n    });\n\n    // or oauth key/ secret\n    github.authenticate({\n        type: \"oauth\",\n        key: \"clientID\",\n        secret: \"clientSecret\"\n    });\n\n    // or token\n    github.authenticate({\n        type: \"token\",\n        token: \"userToken\",\n    });",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:379"
        },
        {
            "message": "Missing item type\nClient#hasNextPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the next page",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:452"
        },
        {
            "message": "Missing item type\nClient#hasPreviousPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the previous page",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:462"
        },
        {
            "message": "Missing item type\nClient#hasLastPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the last page",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:472"
        },
        {
            "message": "Missing item type\nClient#hasFirstPage(link) -> null\n    - link (mixed): response of a request or the contents of the Link header\n\nCheck if a request result contains a link to the first page",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:482"
        },
        {
            "message": "Missing item type\nClient#getNextPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the next page, based on the contents of the `Link` header",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:537"
        },
        {
            "message": "Missing item type\nClient#getPreviousPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the previous page, based on the contents of the `Link` header",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:548"
        },
        {
            "message": "Missing item type\nClient#getLastPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the last page, based on the contents of the `Link` header",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:559"
        },
        {
            "message": "Missing item type\nClient#getFirstPage(link, callback) -> null\n    - link (mixed): response of a request or the contents of the Link header\n    - callback (Function): function to call when the request is finished with an error as first argument and result data as second argument.\n\nGet the first page, based on the contents of the `Link` header",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:570"
        },
        {
            "message": "Missing item type\nClient#httpSend(msg, block, callback) -> null\n    - msg (Object): parameters to send as the request body\n    - block (Object): parameter definition from the `routes.json` file that\n        contains validation rules\n    - callback (Function): function to be called when the request returns.\n        If the the request returns with an error, the error is passed to\n        the callback as its first argument (NodeJS-style).\n\nSend an HTTP request to the server and pass the result to a callback.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/index.js:648"
        },
        {
            "message": "Missing item type\nclass Util\n\n Copyright 2012 Cloud9 IDE, Inc.\n\n This product includes software developed by\n Cloud9 IDE, Inc (http://c9.io).\n\n Author: Mike de Boer <mike@c9.io>",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:1"
        },
        {
            "message": "Missing item type\nUtil#extend(dest, src, noOverwrite) -> Object\n    - dest (Object): destination object\n    - src (Object): source object\n    - noOverwrite (Boolean): set to `true` to overwrite values in `src`\n\nShallow copy of properties from the `src` object to the `dest` object. If the\n`noOverwrite` argument is set to to `true`, the value of a property in `src`\nwill not be overwritten if it already exists.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:14"
        },
        {
            "message": "Missing item type\nUtil#escapeRegExp(str) -> String\n    - str (String): string to escape\n \nEscapes characters inside a string that will an error when it is used as part\nof a regex upon instantiation like in `new RegExp(\"[0-9\" + str + \"]\")`",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:32"
        },
        {
            "message": "Missing item type\nUtil#toCamelCase(str, [upper]) -> String\n    - str (String): string to transform\n    - upper (Boolean): set to `true` to transform to CamelCase\n \nTransform a string that contains spaces or dashes to camelCase. If `upper` is\nset to `true`, the string will be transformed to CamelCase.\n \nExample:\n\n    Util.toCamelCase(\"why U no-work\"); // returns 'whyUNoWork'\n    Util.toCamelCase(\"I U no-work\", true); // returns 'WhyUNoWork'",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:43"
        },
        {
            "message": "Missing item type\nUtil#isTrue(c) -> Boolean\n    - c (mixed): value the variable to check. Possible values:\n        true   The function returns true.\n        'true' The function returns true.\n        'on'   The function returns true.\n        1      The function returns true.\n        '1'    The function returns true.\n \nDetermines whether a string is true in the html attribute sense.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:65"
        },
        {
            "message": "Missing item type\nUtil#isFalse(c) -> Boolean\n    - c (mixed): value the variable to check. Possible values:\n        false   The function returns true.\n        'false' The function returns true.\n        'off'   The function returns true.\n        0       The function returns true.\n        '0'     The function returns true.\n \nDetermines whether a string is false in the html attribute sense.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:80"
        },
        {
            "message": "Missing item type\nUtil#log(arg1, [arg2], [type]) -> null\n    - arg1 (mixed): messages to be printed to the standard output\n    - type (String): type denotation of the message. Possible values:\n        'info', 'error', 'fatal', 'exit'. Optional, defaults to 'info'.\n \nUnified logging to the console; arguments passed to this function will put logged\nto the standard output of the current process and properly formatted.\nAny non-String object will be inspected by the NodeJS util#inspect utility\nfunction.\nMessages will be prefixed with its type (with corresponding font color), like so:\n \n    [info] informational message\n    [error] error message\n    [fatal] fatal error message\n    [exit] program exit message (not an error)\n \n The type of message can be defined by passing it to this function as the last/ \n final argument. If the type can not be found, this last/ final argument will be\n regarded as yet another message.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/github/util.js:103"
        },
        {
            "message": "Missing item type\nEnsure some object is a coerced to a string",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js:346"
        },
        {
            "message": "Missing item type\n_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/dist/underscore.string.js:552"
        },
        {
            "message": "Missing item type\nEnsure some object is a coerced to a string",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/helper/makeString.js:1"
        },
        {
            "message": "Missing item type\n_s.prune: a more elegant version of truncate\nprune extra chars, never leaving a half-chopped word.",
            "line": " /home/maboiteaspam/Bureau/project-bin-doc/node_modules/underscore.string/prune.js:1"
        }
    ]
}